// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: imageserial.proto

package imageserial

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RawPixel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R uint32 `protobuf:"varint,1,opt,name=r,proto3" json:"r,omitempty"`
	G uint32 `protobuf:"varint,2,opt,name=g,proto3" json:"g,omitempty"`
	B uint32 `protobuf:"varint,3,opt,name=b,proto3" json:"b,omitempty"`
	A uint32 `protobuf:"varint,4,opt,name=a,proto3" json:"a,omitempty"`
}

func (x *RawPixel) Reset() {
	*x = RawPixel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imageserial_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawPixel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawPixel) ProtoMessage() {}

func (x *RawPixel) ProtoReflect() protoreflect.Message {
	mi := &file_imageserial_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawPixel.ProtoReflect.Descriptor instead.
func (*RawPixel) Descriptor() ([]byte, []int) {
	return file_imageserial_proto_rawDescGZIP(), []int{0}
}

func (x *RawPixel) GetR() uint32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *RawPixel) GetG() uint32 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *RawPixel) GetB() uint32 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *RawPixel) GetA() uint32 {
	if x != nil {
		return x.A
	}
	return 0
}

type RawPixelRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pixels []*RawPixel `protobuf:"bytes,1,rep,name=pixels,proto3" json:"pixels,omitempty"`
}

func (x *RawPixelRow) Reset() {
	*x = RawPixelRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imageserial_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawPixelRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawPixelRow) ProtoMessage() {}

func (x *RawPixelRow) ProtoReflect() protoreflect.Message {
	mi := &file_imageserial_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawPixelRow.ProtoReflect.Descriptor instead.
func (*RawPixelRow) Descriptor() ([]byte, []int) {
	return file_imageserial_proto_rawDescGZIP(), []int{1}
}

func (x *RawPixelRow) GetPixels() []*RawPixel {
	if x != nil {
		return x.Pixels
	}
	return nil
}

type ImageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []*RawPixelRow `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *ImageData) Reset() {
	*x = ImageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imageserial_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageData) ProtoMessage() {}

func (x *ImageData) ProtoReflect() protoreflect.Message {
	mi := &file_imageserial_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageData.ProtoReflect.Descriptor instead.
func (*ImageData) Descriptor() ([]byte, []int) {
	return file_imageserial_proto_rawDescGZIP(), []int{2}
}

func (x *ImageData) GetRows() []*RawPixelRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

type ImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image *ImageData `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *ImageRequest) Reset() {
	*x = ImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imageserial_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageRequest) ProtoMessage() {}

func (x *ImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_imageserial_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageRequest.ProtoReflect.Descriptor instead.
func (*ImageRequest) Descriptor() ([]byte, []int) {
	return file_imageserial_proto_rawDescGZIP(), []int{3}
}

func (x *ImageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImageRequest) GetImage() *ImageData {
	if x != nil {
		return x.Image
	}
	return nil
}

type ImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image *ImageData `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *ImageResponse) Reset() {
	*x = ImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_imageserial_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageResponse) ProtoMessage() {}

func (x *ImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_imageserial_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageResponse.ProtoReflect.Descriptor instead.
func (*ImageResponse) Descriptor() ([]byte, []int) {
	return file_imageserial_proto_rawDescGZIP(), []int{4}
}

func (x *ImageResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImageResponse) GetImage() *ImageData {
	if x != nil {
		return x.Image
	}
	return nil
}

var File_imageserial_proto protoreflect.FileDescriptor

var file_imageserial_proto_rawDesc = []byte{
	0x0a, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x22, 0x42, 0x0a, 0x08, 0x52, 0x61, 0x77, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x12, 0x0c, 0x0a, 0x01,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x67, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x01, 0x62, 0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x01, 0x61, 0x22, 0x3c, 0x0a, 0x0b, 0x52, 0x61, 0x77, 0x50, 0x69, 0x78, 0x65, 0x6c,
	0x52, 0x6f, 0x77, 0x12, 0x2d, 0x0a, 0x06, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x2e, 0x52, 0x61, 0x77, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x52, 0x06, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x73, 0x22, 0x39, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2c, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x52, 0x61, 0x77, 0x50,
	0x69, 0x78, 0x65, 0x6c, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x50, 0x0a,
	0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22,
	0x51, 0x0a, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x32, 0x53, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x75,
	0x70, 0x73, 0x69, 0x64, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x19,
	0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x19, 0x5a, 0x17, 0x6e, 0x65, 0x6c, 0x73, 0x6f,
	0x6e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_imageserial_proto_rawDescOnce sync.Once
	file_imageserial_proto_rawDescData = file_imageserial_proto_rawDesc
)

func file_imageserial_proto_rawDescGZIP() []byte {
	file_imageserial_proto_rawDescOnce.Do(func() {
		file_imageserial_proto_rawDescData = protoimpl.X.CompressGZIP(file_imageserial_proto_rawDescData)
	})
	return file_imageserial_proto_rawDescData
}

var file_imageserial_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_imageserial_proto_goTypes = []interface{}{
	(*RawPixel)(nil),      // 0: imageserial.RawPixel
	(*RawPixelRow)(nil),   // 1: imageserial.RawPixelRow
	(*ImageData)(nil),     // 2: imageserial.ImageData
	(*ImageRequest)(nil),  // 3: imageserial.ImageRequest
	(*ImageResponse)(nil), // 4: imageserial.ImageResponse
}
var file_imageserial_proto_depIdxs = []int32{
	0, // 0: imageserial.RawPixelRow.pixels:type_name -> imageserial.RawPixel
	1, // 1: imageserial.ImageData.rows:type_name -> imageserial.RawPixelRow
	2, // 2: imageserial.ImageRequest.image:type_name -> imageserial.ImageData
	2, // 3: imageserial.ImageResponse.image:type_name -> imageserial.ImageData
	3, // 4: imageserial.Image.upsideDownImage:input_type -> imageserial.ImageRequest
	4, // 5: imageserial.Image.upsideDownImage:output_type -> imageserial.ImageResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_imageserial_proto_init() }
func file_imageserial_proto_init() {
	if File_imageserial_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_imageserial_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawPixel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imageserial_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawPixelRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imageserial_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imageserial_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_imageserial_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_imageserial_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_imageserial_proto_goTypes,
		DependencyIndexes: file_imageserial_proto_depIdxs,
		MessageInfos:      file_imageserial_proto_msgTypes,
	}.Build()
	File_imageserial_proto = out.File
	file_imageserial_proto_rawDesc = nil
	file_imageserial_proto_goTypes = nil
	file_imageserial_proto_depIdxs = nil
}
